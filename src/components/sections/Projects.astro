---
import Container from "../shared/Container.astro";

// Proyectos
const projects = [
  {
    title: "Sistema de reservas para hotel",
    description: "Este sistema permite que los clientes vean paquetes, precios y hagan reservas.",
    repo: "https://github.com/tuusuario/task-manager",
    image: "/projects/image1.png"
  },
  {
    title: "Sistema de Biblioteca",
    description: "Gestión de libros para administradores y vista previa para clientes.",
    repo: "https://github.com/tuusuario/library-system",
    image: "/projects/image2.png"
  },
  {
    title: "Punto de ventas comercial",
    description: "Gestión de productos y compras en línea para clientes.",
    repo: "https://github.com/tuusuario/pos-system",
    image: "/projects/image3.png"
  },
  {
    title: "Dashboard financiero",
    description: "Visualización de ingresos, gastos y estadísticas en tiempo real.",
    repo: "https://github.com/tuusuario/finance-dashboard",
    image: "/projects/image4.png"
  },
  {
    title: "Red social estudiantil",
    description: "Conexión entre estudiantes, publicaciones, mensajes y perfiles.",
    repo: "https://github.com/tuusuario/student-network",
    image: "/projects/image5.png"
  },
  {
    title: "App de clima",
    description: "Consulta del clima en tiempo real con interfaz moderna.",
    repo: "https://github.com/tuusuario/weather-app",
    image: "/projects/image6.png"
  }
];
---

<section id="projects" class="relative py-24 overflow-visible">
  <Container className="relative z-10 overflow-hidden">
    <h2 class="text-3xl lg:text-4xl font-bold text-heading-1 text-center mb-10">
      My Projects
    </h2>

    <!-- Carrusel con scroll horizontal -->
    <div class="relative overflow-hidden">
      <div id="carousel-container" class="flex gap-6 overflow-x-auto scroll-smooth snap-x snap-mandatory no-scrollbar">
        {projects.map(project => (
          <div class="flex-shrink-0 w-80 md:w-96 snap-center">
            <div class="bg-box-bg border border-box-border rounded-2xl p-6 
              shadow-lg hover:shadow-xl hover:shadow-primary transition-transform duration-300 
              transform hover:scale-105 hover:-translate-y-2 text-center flex flex-col items-center relative z-10 overflow-visible min-h-[420px]">
              
              <div class="relative w-full overflow-visible rounded-xl">
                <div class="w-full aspect-[16/9] bg-black overflow-visible rounded-t-xl border-[6px] border-gray-800 shadow-inner flex items-center justify-center">
                  <img src={project.image} alt={project.title} class="w-full h-full object-cover rounded-t-xl transition-transform duration-300 hover:scale-105 transform-origin-center" />
                </div>
                <div class="w-3/4 mx-auto h-2 bg-gray-700 rounded-b-lg -mt-1 relative z-10"></div>
                <div class="w-11/12 h-5 bg-gray-900 rounded-b-xl shadow-md mx-auto mt-1"></div>
              </div>

              <h3 class="text-xl font-semibold text-heading-1 mt-4">{project.title}</h3>
              <p class="text-heading-2 mt-2 mb-4">{project.description}</p>
              <a href={project.repo} target="_blank" rel="noopener noreferrer"
                class="inline-flex items-center px-6 py-2 bg-green-600 text-white font-semibold rounded-md hover:bg-blue-500 transition duration-300">
                View Repo
              </a>
            </div>
          </div>
        ))}
      </div>
    </div>
  </Container>
</section>

<style>
  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }
  .no-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
</style>

<script>
  const carousel = document.getElementById('carousel-container');
  let isDown = false;
  let startX;
  let scrollLeft;

  carousel.addEventListener('mousedown', (e) => {
    isDown = true;
    startX = e.pageX - carousel.offsetLeft;
    scrollLeft = carousel.scrollLeft;
  });

  carousel.addEventListener('mouseleave', () => {
    isDown = false;
  });

  carousel.addEventListener('mouseup', () => {
    isDown = false;
  });

  carousel.addEventListener('mousemove', (e) => {
    if (!isDown) return;
    e.preventDefault();
    const x = e.pageX - carousel.offsetLeft;
    const walk = (x - startX) * 2; // Velocidad del scroll
    carousel.scrollLeft = scrollLeft - walk;
  });
</script>